.env
local-development.yml
node_modules
dist
dev-dist
master.admin.js
combined.log
error.log
sonar-report.xml
coverage
eslint-report.json

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Cypress Environment Variables
e2e-tests/cypress.env.json

.DS_Store

*.pem

# Ignore Cypress folders
e2e-tests/cypress/fixtures/
e2e-tests/cypress/videos/
e2e-tests/cypress/screenshots/
e2e-tests/cypress/downloads/

# Ignore merge-reports
e2e-tests/cypress/test-results/
e2e-tests/cypress/reports/

# Ignore merged-report
e2e-tests/merged-report.json

#Python files
*.pyc
__pycache__/
# Ignore Python virtual environment directories
venv/
env/
.venv/
.python_env/

# Ignore pipenv files
Pipfile.lock

# Ignore poetry files
poetry.lock

# Ignore build artifacts
build/
dist/
*.egg-info/
.eggs/

# Ignore coverage reports
.coverage
htmlcov/
.coverage.*
.cache/
nosetests.xml
coverage.xml
*.cover
*.py,cover

# Ignore test output
test-output/
.pytest_cache/
.tox/

# Ignore Jupyter Notebook checkpoints
.ipynb_checkpoints/

# Ignore mypy type check reports
.mypy_cache/
.dmypy.json
dmypy.json

# Ignore pylint reports
pylint-report.txt

# Ignore temporary files
*.swp
*.swo
*~